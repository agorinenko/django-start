version: '3.1'

services:
  nginx:
    ports:
      - "80:80"
    build:
      context: ./etc/nginx/
      dockerfile: Dockerfile
      args:
        - DOCKER_REGISTRY
        - PIP_INDEX_URL
        - PIP_TRUSTED_HOST
    volumes:
      - static_store:/opt/app/public
    depends_on:
      - web

  web:
    ports:
      - "8000:8000"
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DOCKER_REGISTRY
        - PIP_INDEX_URL
        - PIP_TRUSTED_HOST
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    command: ["web"]
    volumes:
      - static_store:/opt/app/public

  db:
    image: ${DOCKER_REGISTRY}/postgres:17.5-bookworm
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - pg_store:/var/lib/postgresql/data

  redis:
    image: ${DOCKER_REGISTRY}/redis:8.0.2-bookworm
    ports:
      - "6379:6379"
    env_file:
      - .env

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
      args:
        - DOCKER_REGISTRY
        - PIP_INDEX_URL
        - PIP_TRUSTED_HOST
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - LOG_DIR=/var/log/web_app
    depends_on:
      - db
      - redis
    command: [ "celery" ]

  beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
      args:
        - DOCKER_REGISTRY
        - PIP_INDEX_URL
        - PIP_TRUSTED_HOST
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - LOG_DIR=/var/log/web_app
    depends_on:
      - celery
    command: [ "beat" ]

volumes:
  static_store:
  pg_store: